@model TrailerAPPv3.Models.movement_trailer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registrar movimiento de trailer</h2>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDE5TsfQFsFs01rd2SuqZwiE6vb9e7FmqI&callback=initMap" async defer></script>
<script>
        function initMap() {
            var location = { lat: 14.63491, lng: -90.50688 }; // Default location (New York)

            var map = new google.maps.Map(document.getElementById("map"), {
                zoom: 10,
                center: location
            });

            var marker = new google.maps.Marker({
                position: location,
                map: map,
                draggable: true
            });

            // Update hidden form fields when marker is moved
            google.maps.event.addListener(marker, 'dragend', function (event) {
                document.getElementById("latitude").value = event.latLng.lat().toFixed(6);
                document.getElementById("longitude").value = event.latLng.lng().toFixed(6);
            });
        }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Movimiento</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.trailer_id, "Trailer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("trailer_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.trailer_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        Mapa
    </div>
    <div id="map" style="height: 400px; width: 100%;"></div>


    <div class="form-group">
        @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.latitude, new { htmlAttributes = new {  @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear movimiento" class="btn btn-primary w-100  mt-4 mb-4" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar", "Index",null, new { @class = "btn btn-dark" })
</div>
